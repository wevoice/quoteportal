# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2016-12-07 15:09
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AudioAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('transcription', models.CharField(blank=True, choices=[('Y', 'Yes'), ('N', 'No')], max_length=16, null=True)),
                ('path_to_source', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'verbose_name_plural': 'Audio',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='DTPAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('dtp_application', models.CharField(blank=True, max_length=256, null=True)),
                ('mac_or_windows', models.CharField(blank=True, choices=[('M', 'Mac'), ('W', 'Windows'), ('E', 'Either')], max_length=32, null=True)),
                ('lso_on_dtp', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=16)),
                ('path_to_source', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'verbose_name_plural': 'DTP',
            },
        ),
        migrations.CreateModel(
            name='GraphicAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('editable_graphics_source_available', models.CharField(blank=True, choices=[('Y', 'Yes'), ('N', 'No')], max_length=16, null=True)),
                ('path_to_source', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'verbose_name_plural': 'Graphics',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='PDFAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('editable_pdf_source_available', models.CharField(blank=True, choices=[('Y', 'Yes'), ('N', 'No')], max_length=16, null=True)),
                ('path_to_source', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'verbose_name_plural': 'PDFs',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('new_account', models.BooleanField()),
                ('tms_or_cat_tool', models.CharField(blank=True, choices=[('GS', 'GlobalSight'), ('IWS', 'Idiom WorldServer (versions 8.x)'), ('SDL_TMS', 'SDL TMS'), ('SDL_GS', 'SDL GroupShare'), ('GL', 'GlobalLink'), ('SL', 'Smartlink'), ('TF', 'Transifex'), ('XTM', 'XTM'), ('Plunet', 'Plunet'), ('GTT', 'GTT'), ('CW', 'Cloudwords'), ('Asterix', 'Asterix'), ('MQ', 'MemoQ Server'), ('MC', 'MateCat'), ('Other', 'Other')], default='GS', max_length=128, null=True, verbose_name='TMS or CAT tool used')),
                ('tms_login_info', models.CharField(blank=True, max_length=256, null=True, verbose_name='TMS login info')),
                ('path_to_source', models.CharField(blank=True, max_length=128, null=True)),
                ('sla_metrics_path', models.CharField(blank=True, max_length=128, null=True, verbose_name='SLA metrics path')),
                ('rounds_of_testing', models.CharField(blank=True, choices=[('None', 'None'), ('One', 'One'), ('Two', 'Two'), ('Three', 'Three')], max_length=8, null=True)),
                ('project_and_filetype_info', models.TextField(blank=True, null=True)),
                ('client_instructions', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('requested_due_date', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(blank=True, choices=[('OPEN', 'Open'), ('PROD', 'Production'), ('COMP', 'Completed'), ('CLOSED', 'Closed'), ('HOLD', 'On Hold')], default='OPEN', max_length=128, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.Client')),
                ('source_language', models.ForeignKey(blank=True, default=5, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sourcelanguage', to='portal.Language')),
                ('target_languages', models.ManyToManyField(to='portal.Language')),
            ],
        ),
        migrations.CreateModel(
            name='VideoAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('dub_or_subtitle', models.CharField(blank=True, choices=[('DUB', 'Dubbing'), ('SUB', 'Subtitle')], max_length=128, null=True)),
                ('onscreen_text', models.CharField(blank=True, choices=[('Y', 'Yes'), ('N', 'No')], max_length=16, null=True)),
                ('transcription', models.CharField(blank=True, choices=[('Y', 'Yes'), ('N', 'No')], max_length=16, null=True)),
                ('path_to_source', models.CharField(blank=True, max_length=128, null=True)),
                ('ts_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.Request')),
            ],
            options={
                'verbose_name_plural': 'Video',
            },
        ),
        migrations.AddField(
            model_name='pdfasset',
            name='ts_request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.Request'),
        ),
        migrations.AddField(
            model_name='graphicasset',
            name='ts_request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.Request'),
        ),
        migrations.AddField(
            model_name='dtpasset',
            name='ts_request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.Request'),
        ),
        migrations.AddField(
            model_name='audioasset',
            name='ts_request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.Request'),
        ),
    ]
